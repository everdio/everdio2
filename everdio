#!/usr/bin/env php
<?php

\ini_set("memory_limit", "2048M");
\date_default_timezone_set("Europe/Amsterdam");
\setlocale(\LC_TIME, "nl_NL.utf8");
\ini_set('intl.default_locale', 'nl-NL');
\ini_set('display_errors', '1');

declare(ticks = 1);

include_once(__DIR__ . \DIRECTORY_SEPARATOR . "everdio.php");

$controller = new \Component\Core\Adapter\Wrapper\Controller\Model\Cli;

try {
    $controller->server = $_SERVER;
    $controller->debug = "_debug";
    $controller->path = __DIR__;
    $controller->storage = "/home/evertdf/tmp";

    \pcntl_async_signals(true);
    \pcntl_signal(\SIGINT, [$controller, "terminate"]);
    \pcntl_signal(\SIGTERM, [$controller, "terminate"]);

    $controller->setup();


    echo $controller->execute(\DIRECTORY_SEPARATOR . $controller->arguments);
} catch (\Exception | \Error $ex) {
    echo \sprintf("\n%s catched %s\n\n", \get_class($ex), \ucfirst($ex->getMessage()));
    if (isset($controller->debug) && isset($controller->request->{$controller->debug})) {
        echo \sprintf("\n%s\n", $ex->getTraceAsString());
        if ($ex->getPrevious()) {
            echo \sprintf("\n%s: %s\n\n%s\n", \get_class($ex->getPrevious()), \ucfirst($ex->getPrevious()->getMessage()), $ex->getPrevious()->getTraceAsString());
        }
    }
}

exit;
